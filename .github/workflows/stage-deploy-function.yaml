name: Staging Deployment
on:
    push:
        branches:
            - must-deploy

env:
    CGO_ENABLED: 0
    GO111MODULE: on
    PROJECT_ID: ${{ secrets.STG_GCP_PROJECT }}
    REGION: europe-west1
    ACCESS_TOKEN_USR: ${{ secrets.GH_ACCESS_TOKEN_USR }}
    ACCESS_TOKEN_PWD: ${{ secrets.GH_ACCESS_TOKEN_PWD }}
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout ðŸŒ§
                uses: actions/checkout@v2

            -   name: Install golang
                uses: actions/setup-go@v2
                with:
                    go-version: 1.19.x

            -   name: Configure git for private modules
                run: git config --global url."https://${{ env.ACCESS_TOKEN_USR }}:${{ env.ACCESS_TOKEN_PWD }}@github.com".insteadOf "https://github.com"

            -   name: Run tests
                run: |-
                    go test -cover ./...
                env:
                    ACCESS_TOKEN_USR: ${{ env.ACCESS_TOKEN_USR }}
                    ACCESS_TOKEN_PWD: ${{ env.ACCESS_TOKEN_PWD }}

            -   name: Vendoring mode on
                run: go mod vendor

            -   name: Setup Cloud SDK
                uses: google-github-actions/setup-gcloud@v0.2.0
                with:
                    project_id: ${{ env.PROJECT_ID }}
                    # encoded as a Base64 string (eg. cat my-key.json | base64 on macOS)
                    service_account_key: ${{ secrets.STG_GCP_FUNCTION_DEPLOYER }}
                    export_default_credentials: true  # Set to true to authenticate the Cloud Run action

            -   name: Deploy to GCP Functions âœ…
                # Read the deployment documentation to understand the various flags used: https://cloud.google.com/functions/docs/deploying
                # https://cloud.google.com/functions/docs/deploying/filesystem
                run: gcloud functions deploy do-that-thing --gen2 --entry-point DoThatTing --trigger-http --allow-unauthenticated --region ${{env.REGION}} --runtime go119 --memory 256MiB --min-instances 0 --set-env-vars GOOGLE_CLOUD_PROJECT=${{ env.PROJECT_ID }}
